/*
https://lightoj.com/problem/ip-checking

IP Checking

An IP address is a 32 bit address formatted in the following way: a.b.c.d

where a, b, c, d are integers each ranging from 0 to 255. Now you are given two IP addresses, first one in decimal form and second one in binary form, your task is to find if they are the same or not.

Input
Input starts with an integer T (â‰¤ 100), denoting the number of test cases.

Each case starts with two lines. First line contains an IP address in decimal form, and second line contains an IP address in binary form. In binary form, each of the four parts contains 8 digits. Assume that the given addresses are valid.

Output
For each case, print the case number and Yes if they are same, otherwise print No.

Sample
Input	Output
2
192.168.0.100
11000000.10101000.00000000.11001000
65.254.63.122
01000001.11111110.00111111.01111010

Case 1: No
Case 2: Yes

*/

//By Forte11
#include <bits/stdc++.h>

using namespace std;

#define cik(i, a, b, c) for(int i =(a); i <=(b); i +=(c))

string A, B, C, D;

void convert(){
    int lon = C.size() - 1, sol = 0;
    cik(i, 0, lon, 1){
        sol += ((1 << (lon - i)) * (C[i] - '0'));
    }

    string S = "";
    if(!sol){
        S = "0";
    }
    else{
        while(sol){
            S = char((sol % 10) + '0') + S;
            sol /= 10;
        }
    }
    D += S;
    return;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int T; cin >> T;
    cik(t, 1, T, 1){
        cin >> A >> B;

        C = "", D = "";
        cik(i, 0, B.size() - 1, 1){
            if(B[i] != '.'){
                C += B[i];
            }
            else{
                convert();
                D += ".";
                C = "";
            }
        }
        convert();

        cout << "Case " << t << ": ";

        if(A == D){
            cout << "Yes\n";
        }
        else{
            cout << "No\n";
        }
    }
    return 0;
}
