/*
https://www.spoj.com/problems/PERIOD/en/

PERIOD - Period
no tags 

For each prefix of a given string S with N characters (each character has an ASCII code between 97 and 126, inclusive), we want to know whether the prefix is a periodic string. That is, for each i (2 <= i <= N) we want to know the largest K > 1 (if there is one) such that the prefix of S with length i can be written as AK , that is A concatenated K times, for some string A. Of course, we also want to know the period K.

Input
The first line of the input file will contains only the number T (1 <= T <= 10) of the test cases.

Each test case consists of two lines. The first one contains N (2 <= N <= 1 000 000) – the size of the string S. The second line contains the string S.

Output
For each test case, output “Test case #” and the consecutive test case number on a single line; then, for each prefix with length i that has a period K > 1, output the prefix size i and the period K separated by a single space; the prefix sizes must be in increasing order. Print a blank line after each test case.

Example
Input:
2
3
aaa
12
aabaabaabaab

Output:
Test case #1
2 2
3 3

Test case #2
2 2
6 2
9 3
12 4

*/

#include <bits/stdc++.h>

using namespace std;

#define cik(i, a, b, c) for(int i =(a); i <=(b); i +=(c))

const int maxn = 1e6 + 5;

int pi[maxn];
string text, pat;

void prekmp(){
    int i = 1;
    int j = 0;

    int len = pat.size();

    while(i < len){
        if(pat[i] == pat[j]){
            pi[i] = j + 1;
            j++, i++;
        }
        else {
            if(j != 0){
                j = pi[j - 1];
            }
            else{
                pi[i] = 0; i++;
            }
        }
    }return;
}
int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

   // freopen(".in", "r", stdin);

    int T; cin >> T;
    cik(t, 1, T, 1){
        int len;
        cin >> len >> pat;
        prekmp();

        cout << "Test case #" << t << "\n";

        for(int i = 1; i <= pat.size() - 1; i++){
            int k = (i + 1) - pi[i];
            if((i + 1) % k == 0 && i + 1 > k ){
                cout << i + 1 << " " << ((i + 1) / k) << "\n";
            }
        }
        cout << "\n";
    }

    return 0;
}
